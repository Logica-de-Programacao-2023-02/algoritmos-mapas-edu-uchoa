1. Escreva uma função que conte a ocorrência de cada palavra em uma string e 
retorne um mapa onde as chaves são as palavras encontradas e os valores são o
número de ocorrências de cada palavra.

package main
import (
	"fmt"
	"strings"
)
func contarOcorrenciasPalavras(texto string) map[string]int {
	palavras := strings.Fields(texto)
	ocorrencias := make(map[string]int)
	for _, palavra := range palavras {
		palavra = strings.TrimRightFunc(palavra, func(r rune) bool {
			return !(r >= 'a' && r <= 'z' || r >= 'A' && r <= 'Z' || r >= '0' && r <= '9')
		})
		palavra = strings.ToLower(palavra)
		ocorrencias[palavra]++
	}
	return ocorrencias
}

2.Escreva uma função que receba dois mapas e retorne um novo mapa contendo todos os elementos dos mapas de entrada.
Em caso de chaves duplicadas, o valor do segundo mapa deve prevalecer.

package main
import "fmt"
func combinarMapas(mapa1, mapa2 map[string]int) map[string]int {
	resultado := make(map[string]int)
	for chave, valor := range mapa1 {
		resultado[chave] = valor
	}
	for chave, valor := range mapa2 {
		resultado[chave] = valor
	}
	return resultado
}

3.Escreva uma função que receba um mapa com valores inteiros e retorne a soma de todos os valores.

package main
import "fmt"
func somarValores(m mapa[int]int) int {
	soma := 0
	for _, valor := range m {
		soma += valor
	}
	return soma
}

4.Escreva uma função que receba um slice de palavras e retorne um mapa onde as chaves são palavras que
são anagramas entre si e os valores são os grupos de palavras anagramas.

package main
import (
	"fmt"
	"sort"
	"strings"
)
func agruparAnagramas(palavras []string) map[string][]string {
	anagramas := make(map[string][]string)
	for _, palavra := range palavras {
		chave := ordenarString(palavra)
		anagramas[chave] = append(anagramas[chave], palavra)
	}
	return anagramas
}
func ordenarString(s string) string {
	caracteres := strings.Split(s, "")
	sort.Strings(caracteres)
	return strings.Join(caracteres, "")
}

5.Escreva uma função que receba uma string e retorne um mapa onde as chaves são os caracteres presentes na
string e os valores são a frequência de cada caractere.

package main
import "fmt"
func contarFreqCarac(s string) map[rune]int {
	frequencia := make(map[rune]int)
	for _, char := range s {
		frequencia[char]++
	}
	return frequencia
}

6.Escreva uma função que receba uma lista de mapas, onde cada mapa contém a contagem de palavras de um texto, 
e retorne um único mapa contendo a soma de todas as contagens.

package main
import "fmt"
func somarContagens(listadeMapas []map[string]int) map[string]int {
	resultado := make(map[string]int)
	for _, m := range listadeMapas {
		for palavra, contagem := range m {
			resultado[palavra] += contagem
		}
	}
	return resultado
}

7.
